.TH "lib/ccn_uri.c" 3 "19 May 2013" "Version 0.7.2" "Content-Centric Networking in C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/ccn_uri.c \- 
.PP
Support for ccnx:/URI/.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "static int \fBis_uri_reserved\fP (const unsigned char ch)"
.br
.ti -1c
.RI "void \fBccn_uri_append_percentescaped\fP (struct \fBccn_charbuf\fP *c, const unsigned char *data, size_t size)"
.br
.RI "\fIThis appends to c a percent-escaped representation of the component passed in. \fP"
.ti -1c
.RI "void \fBccn_uri_append_mixedescaped\fP (struct \fBccn_charbuf\fP *c, const unsigned char *data, size_t size)"
.br
.ti -1c
.RI "int \fBccn_uri_append\fP (struct \fBccn_charbuf\fP *c, const unsigned char *ccnb, size_t size, int flags)"
.br
.RI "\fIThis appends to c a URI representation of the ccnb-encoded Name element passed in. \fP"
.ti -1c
.RI "static int \fBhexit\fP (int c)"
.br
.ti -1c
.RI "static int \fBccn_append_uri_component\fP (struct \fBccn_charbuf\fP *c, const char *s, size_t limit, size_t *cont)"
.br
.ti -1c
.RI "static int \fBccn_name_last_component_offset\fP (const unsigned char *ccnb, size_t size)"
.br
.ti -1c
.RI "int \fBccn_name_from_uri\fP (struct \fBccn_charbuf\fP *c, const char *uri)"
.br
.RI "\fIConvert a ccnx-scheme URI to a ccnb-encoded Name. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Support for ccnx:/URI/. 

..
.PP
Part of the CCNx C Library.
.PP
Copyright (C) 2008, 2009, 2010, 2013 Palo Alto Research Center, Inc.
.PP
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License version 2.1 as published by the Free Software Foundation. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. 
.PP
Definition in file \fBccn_uri.c\fP.
.SH "Function Documentation"
.PP 
.SS "static int ccn_append_uri_component (struct \fBccn_charbuf\fP * c, const char * s, size_t limit, size_t * cont)\fC [static]\fP"
.PP
Definition at line 219 of file ccn_uri.c.
.PP
Referenced by ccn_name_from_uri().
.SS "int ccn_name_from_uri (struct \fBccn_charbuf\fP * c, const char * uri)"
.PP
Convert a ccnx-scheme URI to a ccnb-encoded Name. The converted result is placed in c. On input, c may contain a base name, in which case relative URIs are allowed. Otherwise c should start out empty, and the URI must be absolute. 
.PP
\fBReturns:\fP
.RS 4
-1 if an error is found, otherwise returns the number of characters that were processed. 
.RE
.PP

.PP
Definition at line 321 of file ccn_uri.c.
.PP
Referenced by add_uri_exclusion(), append_adjacency_uri(), ccn_guest_prefix(), ccn_initiate_ccndid_fetch(), ccn_initiate_prefix_reg(), ccnd_adjacency_offer_or_commit_req(), ccnd_init_face_guid_cob(), ccnd_init_service_ccnb(), ccnd_parse_uri_list(), ccnd_reg_ccnx_ccndid(), ccnd_reg_uri(), ccnd_req_guest(), ccnd_start_notice(), ccnd_uri_listen(), ccndc_daemonize(), ccndc_get_ccnd_id(), ccnr_init_policy_cob(), ccnr_init_policy_link_cob(), ccnr_init_service_ccnb(), ccnr_uri_listen(), ccns_slice_name(), existingRootOp(), genTestRootRepos(), genTestRootRouting(), getFile(), initialize(), load_policy(), localStore(), main(), NewElem(), parse_ccn_forwarding_entry(), parseAndAccumName(), putFile(), r_proto_append_repo_info(), r_proto_uri_listen(), send_adjacency_solicit(), sendSlice(), stuff_link_check(), SyncNewBase(), test_flatname(), testReadBuilder(), testRootLookup(), and write_slice().
.SS "static int ccn_name_last_component_offset (const unsigned char * ccnb, size_t size)\fC [static]\fP"
.PP
Definition at line 292 of file ccn_uri.c.
.PP
Referenced by ccn_name_from_uri().
.SS "int ccn_uri_append (struct \fBccn_charbuf\fP * c, const unsigned char * ccnb, size_t size, int flags)"
.PP
This appends to c a URI representation of the ccnb-encoded Name element passed in. For convenience, it will also look inside of a ContentObject or Interest object to find the Name. Components that consist solely of zero or more dots are converted by adding 3 more dots so there are no ambiguities with . or .. or whether a component is empty or absent. Will prepend 'ccnx:' if flags & CCN_URI_INCLUDESCHEME is not 0 Will escape with '%' and '=' if flags & CCN_URI_MIXEDESCAPES is not 0 
.PP
Definition at line 141 of file ccn_uri.c.
.PP
Referenced by append_adjacency_uri(), ccn_uri_append_flatname(), ccnd_debug_ccnb(), ccnd_reg_ccnx_ccndid(), ccnd_req_guest(), ccnd_uri_listen(), ccnr_debug_ccnb(), ccnr_uri_listen(), collect_forwarding_html(), collect_forwarding_xml(), debug_logger(), incoming_content(), main(), printTreeInner(), process_data(), storeHandler(), sync_cb(), SyncRootLookupName(), SyncUriForName(), test_flatname(), and testReader().
.SS "void ccn_uri_append_mixedescaped (struct \fBccn_charbuf\fP * c, const unsigned char * data, size_t size)"
.PP
Definition at line 86 of file ccn_uri.c.
.PP
Referenced by ccn_uri_append().
.SS "void ccn_uri_append_percentescaped (struct \fBccn_charbuf\fP * c, const unsigned char * data, size_t size)"
.PP
This appends to c a percent-escaped representation of the component passed in. Only generic URI unreserved characters are not escaped. Components that consist solely of zero or more dots are converted by adding 3 more dots so there are no ambiguities with . or .. or whether a component is empty or absent. (cf. ccn_uri_append) 
.PP
Definition at line 62 of file ccn_uri.c.
.PP
Referenced by append_interest_details(), ccn_uri_append(), ccnd_append_excludes(), and ccndc_srv().
.SS "static int hexit (int c)\fC [static]\fP"
.PP
Definition at line 188 of file ccn_uri.c.
.PP
Referenced by ccn_append_uri_component().
.SS "static int is_uri_reserved (const unsigned char ch)\fC [static]\fP"
.PP
Definition at line 41 of file ccn_uri.c.
.PP
Referenced by ccn_uri_append_mixedescaped(), and ccn_uri_append_percentescaped().
.SH "Author"
.PP 
Generated automatically by Doxygen for Content-Centric Networking in C from the source code.
